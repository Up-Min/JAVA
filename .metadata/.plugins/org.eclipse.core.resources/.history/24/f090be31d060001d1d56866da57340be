package test_11_10th;

public class Reference_ex {

	public static void main(String[] args) {
		
		//배열 복사 후 길이 바꿈
		int[] oldIntArray = {1,2,3};
		int[] newIntArray = new int [5];
		
		for(int i = 0;i<oldIntArray.length;i++) {
			newIntArray[i] = oldIntArray[i];
		}
		
		System.out.println(newIntArray);
		
		
//		String[] strArray = new String[3];
//		// stack 영역에 strArray 선언
//		strArray[0] = "java";
//		strArray[1] = "java";
//		// [0],[1]의 주소값이 동일함 (리터럴 값이 동일한 index는 같은 주소로 들어감)
//		strArray[2] = new String("java");
//		// [0],[1]과 [2]의 주소값이 다름 (리터럴 값이 다름)
//
//		System.out.println(strArray[0] == strArray[1]);
//		// 그래서 [0],[1]번은 같다고 나오지만
//		System.out.println(strArray[0] == strArray[2]);
//		// [0],[2]는 다르다고 나옴
//		System.out.println(strArray[0].equals(strArray[2]));
//		// 하지만 값 자체는 "JAVA"이기 때문에, [0],[2]의 내용물이 같다고 나옴.
		
//					int [] arr1 ;
//					int [] arr2 ;
//					int [] arr3 ;
//			
//					arr1 = new int[] {1,2,3};
//					arr2 = new int[] {1,2,3};
//					arr3 = arr2;
//					
//					
//					System.out.println(arr1 == arr2);
//					// 배열은 참조타입이기 때문에 힙영역의 주소값이 다르다
//					System.out.println(arr2 == arr3);
//					// 그러나 arr2,3는 위에서 같다고 (12번줄) 지정을 해줬기 때문에 값이 true가 나온다.
//			

	}

}
